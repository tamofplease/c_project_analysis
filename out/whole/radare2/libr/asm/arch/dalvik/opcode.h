# 0 "project/radare2/libr/asm/arch/dalvik/opcode.h"
# 0 "<built-in>"
#define __STDC__ 1
# 0 "<built-in>"
#define __STDC_VERSION__ 201710L
# 0 "<built-in>"
#define __STDC_UTF_16__ 1
# 0 "<built-in>"
#define __STDC_UTF_32__ 1
# 0 "<built-in>"
#define __STDC_HOSTED__ 1
# 0 "<built-in>"
#define __GNUC__ 11
# 0 "<built-in>"
#define __GNUC_MINOR__ 2
# 0 "<built-in>"
#define __GNUC_PATCHLEVEL__ 0
# 0 "<built-in>"
#define __VERSION__ "11.2.0"
# 0 "<built-in>"
#define __ATOMIC_RELAXED 0
# 0 "<built-in>"
#define __ATOMIC_SEQ_CST 5
# 0 "<built-in>"
#define __ATOMIC_ACQUIRE 2
# 0 "<built-in>"
#define __ATOMIC_RELEASE 3
# 0 "<built-in>"
#define __ATOMIC_ACQ_REL 4
# 0 "<built-in>"
#define __ATOMIC_CONSUME 1
# 0 "<built-in>"
#define __pic__ 2
# 0 "<built-in>"
#define __PIC__ 2
# 0 "<built-in>"
#define __FINITE_MATH_ONLY__ 0
# 0 "<built-in>"
#define _LP64 1
# 0 "<built-in>"
#define __LP64__ 1
# 0 "<built-in>"
#define __SIZEOF_INT__ 4
# 0 "<built-in>"
#define __SIZEOF_LONG__ 8
# 0 "<built-in>"
#define __SIZEOF_LONG_LONG__ 8
# 0 "<built-in>"
#define __SIZEOF_SHORT__ 2
# 0 "<built-in>"
#define __SIZEOF_FLOAT__ 4
# 0 "<built-in>"
#define __SIZEOF_DOUBLE__ 8
# 0 "<built-in>"
#define __SIZEOF_LONG_DOUBLE__ 16
# 0 "<built-in>"
#define __SIZEOF_SIZE_T__ 8
# 0 "<built-in>"
#define __CHAR_BIT__ 8
# 0 "<built-in>"
#define __BIGGEST_ALIGNMENT__ 16
# 0 "<built-in>"
#define __ORDER_LITTLE_ENDIAN__ 1234
# 0 "<built-in>"
#define __ORDER_BIG_ENDIAN__ 4321
# 0 "<built-in>"
#define __ORDER_PDP_ENDIAN__ 3412
# 0 "<built-in>"
#define __BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__
# 0 "<built-in>"
#define __FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__
# 0 "<built-in>"
#define __SIZEOF_POINTER__ 8
# 0 "<built-in>"
#define __GNUC_EXECUTION_CHARSET_NAME "UTF-8"
# 0 "<built-in>"
#define __GNUC_WIDE_EXECUTION_CHARSET_NAME "UTF-32LE"
# 0 "<built-in>"
#define __SIZE_TYPE__ long unsigned int
# 0 "<built-in>"
#define __PTRDIFF_TYPE__ long int
# 0 "<built-in>"
#define __WCHAR_TYPE__ int
# 0 "<built-in>"
#define __WINT_TYPE__ int
# 0 "<built-in>"
#define __INTMAX_TYPE__ long int
# 0 "<built-in>"
#define __UINTMAX_TYPE__ long unsigned int
# 0 "<built-in>"
#define __CHAR16_TYPE__ short unsigned int
# 0 "<built-in>"
#define __CHAR32_TYPE__ unsigned int
# 0 "<built-in>"
#define __SIG_ATOMIC_TYPE__ int
# 0 "<built-in>"
#define __INT8_TYPE__ signed char
# 0 "<built-in>"
#define __INT16_TYPE__ short int
# 0 "<built-in>"
#define __INT32_TYPE__ int
# 0 "<built-in>"
#define __INT64_TYPE__ long long int
# 0 "<built-in>"
#define __UINT8_TYPE__ unsigned char
# 0 "<built-in>"
#define __UINT16_TYPE__ short unsigned int
# 0 "<built-in>"
#define __UINT32_TYPE__ unsigned int
# 0 "<built-in>"
#define __UINT64_TYPE__ long long unsigned int
# 0 "<built-in>"
#define __INT_LEAST8_TYPE__ signed char
# 0 "<built-in>"
#define __INT_LEAST16_TYPE__ short int
# 0 "<built-in>"
#define __INT_LEAST32_TYPE__ int
# 0 "<built-in>"
#define __INT_LEAST64_TYPE__ long long int
# 0 "<built-in>"
#define __UINT_LEAST8_TYPE__ unsigned char
# 0 "<built-in>"
#define __UINT_LEAST16_TYPE__ short unsigned int
# 0 "<built-in>"
#define __UINT_LEAST32_TYPE__ unsigned int
# 0 "<built-in>"
#define __UINT_LEAST64_TYPE__ long long unsigned int
# 0 "<built-in>"
#define __INT_FAST8_TYPE__ signed char
# 0 "<built-in>"
#define __INT_FAST16_TYPE__ short int
# 0 "<built-in>"
#define __INT_FAST32_TYPE__ int
# 0 "<built-in>"
#define __INT_FAST64_TYPE__ long long int
# 0 "<built-in>"
#define __UINT_FAST8_TYPE__ unsigned char
# 0 "<built-in>"
#define __UINT_FAST16_TYPE__ short unsigned int
# 0 "<built-in>"
#define __UINT_FAST32_TYPE__ unsigned int
# 0 "<built-in>"
#define __UINT_FAST64_TYPE__ long long unsigned int
# 0 "<built-in>"
#define __INTPTR_TYPE__ long int
# 0 "<built-in>"
#define __UINTPTR_TYPE__ long unsigned int
# 0 "<built-in>"
#define __GXX_ABI_VERSION 1016
# 0 "<built-in>"
#define __SCHAR_MAX__ 0x7f
# 0 "<built-in>"
#define __SHRT_MAX__ 0x7fff
# 0 "<built-in>"
#define __INT_MAX__ 0x7fffffff
# 0 "<built-in>"
#define __LONG_MAX__ 0x7fffffffffffffffL
# 0 "<built-in>"
#define __LONG_LONG_MAX__ 0x7fffffffffffffffLL
# 0 "<built-in>"
#define __WCHAR_MAX__ 0x7fffffff
# 0 "<built-in>"
#define __WCHAR_MIN__ (-__WCHAR_MAX__ - 1)
# 0 "<built-in>"
#define __WINT_MAX__ 0x7fffffff
# 0 "<built-in>"
#define __WINT_MIN__ (-__WINT_MAX__ - 1)
# 0 "<built-in>"
#define __PTRDIFF_MAX__ 0x7fffffffffffffffL
# 0 "<built-in>"
#define __SIZE_MAX__ 0xffffffffffffffffUL
# 0 "<built-in>"
#define __SCHAR_WIDTH__ 8
# 0 "<built-in>"
#define __SHRT_WIDTH__ 16
# 0 "<built-in>"
#define __INT_WIDTH__ 32
# 0 "<built-in>"
#define __LONG_WIDTH__ 64
# 0 "<built-in>"
#define __LONG_LONG_WIDTH__ 64
# 0 "<built-in>"
#define __WCHAR_WIDTH__ 32
# 0 "<built-in>"
#define __WINT_WIDTH__ 32
# 0 "<built-in>"
#define __PTRDIFF_WIDTH__ 64
# 0 "<built-in>"
#define __SIZE_WIDTH__ 64
# 0 "<built-in>"
#define __INTMAX_MAX__ 0x7fffffffffffffffL
# 0 "<built-in>"
#define __INTMAX_C(c) c ## L
# 0 "<built-in>"
#define __UINTMAX_MAX__ 0xffffffffffffffffUL
# 0 "<built-in>"
#define __UINTMAX_C(c) c ## UL
# 0 "<built-in>"
#define __INTMAX_WIDTH__ 64
# 0 "<built-in>"
#define __SIG_ATOMIC_MAX__ 0x7fffffff
# 0 "<built-in>"
#define __SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1)
# 0 "<built-in>"
#define __SIG_ATOMIC_WIDTH__ 32
# 0 "<built-in>"
#define __INT8_MAX__ 0x7f
# 0 "<built-in>"
#define __INT16_MAX__ 0x7fff
# 0 "<built-in>"
#define __INT32_MAX__ 0x7fffffff
# 0 "<built-in>"
#define __INT64_MAX__ 0x7fffffffffffffffLL
# 0 "<built-in>"
#define __UINT8_MAX__ 0xff
# 0 "<built-in>"
#define __UINT16_MAX__ 0xffff
# 0 "<built-in>"
#define __UINT32_MAX__ 0xffffffffU
# 0 "<built-in>"
#define __UINT64_MAX__ 0xffffffffffffffffULL
# 0 "<built-in>"
#define __INT_LEAST8_MAX__ 0x7f
# 0 "<built-in>"
#define __INT8_C(c) c
# 0 "<built-in>"
#define __INT_LEAST8_WIDTH__ 8
# 0 "<built-in>"
#define __INT_LEAST16_MAX__ 0x7fff
# 0 "<built-in>"
#define __INT16_C(c) c
# 0 "<built-in>"
#define __INT_LEAST16_WIDTH__ 16
# 0 "<built-in>"
#define __INT_LEAST32_MAX__ 0x7fffffff
# 0 "<built-in>"
#define __INT32_C(c) c
# 0 "<built-in>"
#define __INT_LEAST32_WIDTH__ 32
# 0 "<built-in>"
#define __INT_LEAST64_MAX__ 0x7fffffffffffffffLL
# 0 "<built-in>"
#define __INT64_C(c) c ## LL
# 0 "<built-in>"
#define __INT_LEAST64_WIDTH__ 64
# 0 "<built-in>"
#define __UINT_LEAST8_MAX__ 0xff
# 0 "<built-in>"
#define __UINT8_C(c) c
# 0 "<built-in>"
#define __UINT_LEAST16_MAX__ 0xffff
# 0 "<built-in>"
#define __UINT16_C(c) c
# 0 "<built-in>"
#define __UINT_LEAST32_MAX__ 0xffffffffU
# 0 "<built-in>"
#define __UINT32_C(c) c ## U
# 0 "<built-in>"
#define __UINT_LEAST64_MAX__ 0xffffffffffffffffULL
# 0 "<built-in>"
#define __UINT64_C(c) c ## ULL
# 0 "<built-in>"
#define __INT_FAST8_MAX__ 0x7f
# 0 "<built-in>"
#define __INT_FAST8_WIDTH__ 8
# 0 "<built-in>"
#define __INT_FAST16_MAX__ 0x7fff
# 0 "<built-in>"
#define __INT_FAST16_WIDTH__ 16
# 0 "<built-in>"
#define __INT_FAST32_MAX__ 0x7fffffff
# 0 "<built-in>"
#define __INT_FAST32_WIDTH__ 32
# 0 "<built-in>"
#define __INT_FAST64_MAX__ 0x7fffffffffffffffLL
# 0 "<built-in>"
#define __INT_FAST64_WIDTH__ 64
# 0 "<built-in>"
#define __UINT_FAST8_MAX__ 0xff
# 0 "<built-in>"
#define __UINT_FAST16_MAX__ 0xffff
# 0 "<built-in>"
#define __UINT_FAST32_MAX__ 0xffffffffU
# 0 "<built-in>"
#define __UINT_FAST64_MAX__ 0xffffffffffffffffULL
# 0 "<built-in>"
#define __INTPTR_MAX__ 0x7fffffffffffffffL
# 0 "<built-in>"
#define __INTPTR_WIDTH__ 64
# 0 "<built-in>"
#define __UINTPTR_MAX__ 0xffffffffffffffffUL
# 0 "<built-in>"
#define __GCC_IEC_559 2
# 0 "<built-in>"
#define __GCC_IEC_559_COMPLEX 2
# 0 "<built-in>"
#define __FLT_EVAL_METHOD__ 0
# 0 "<built-in>"
#define __FLT_EVAL_METHOD_TS_18661_3__ 0
# 0 "<built-in>"
#define __DEC_EVAL_METHOD__ 2
# 0 "<built-in>"
#define __FLT_RADIX__ 2
# 0 "<built-in>"
#define __FLT_MANT_DIG__ 24
# 0 "<built-in>"
#define __FLT_DIG__ 6
# 0 "<built-in>"
#define __FLT_MIN_EXP__ (-125)
# 0 "<built-in>"
#define __FLT_MIN_10_EXP__ (-37)
# 0 "<built-in>"
#define __FLT_MAX_EXP__ 128
# 0 "<built-in>"
#define __FLT_MAX_10_EXP__ 38
# 0 "<built-in>"
#define __FLT_DECIMAL_DIG__ 9
# 0 "<built-in>"
#define __FLT_MAX__ 3.40282346638528859811704183484516925e+38F
# 0 "<built-in>"
#define __FLT_NORM_MAX__ 3.40282346638528859811704183484516925e+38F
# 0 "<built-in>"
#define __FLT_MIN__ 1.17549435082228750796873653722224568e-38F
# 0 "<built-in>"
#define __FLT_EPSILON__ 1.19209289550781250000000000000000000e-7F
# 0 "<built-in>"
#define __FLT_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F
# 0 "<built-in>"
#define __FLT_HAS_DENORM__ 1
# 0 "<built-in>"
#define __FLT_HAS_INFINITY__ 1
# 0 "<built-in>"
#define __FLT_HAS_QUIET_NAN__ 1
# 0 "<built-in>"
#define __FLT_IS_IEC_60559__ 2
# 0 "<built-in>"
#define __DBL_MANT_DIG__ 53
# 0 "<built-in>"
#define __DBL_DIG__ 15
# 0 "<built-in>"
#define __DBL_MIN_EXP__ (-1021)
# 0 "<built-in>"
#define __DBL_MIN_10_EXP__ (-307)
# 0 "<built-in>"
#define __DBL_MAX_EXP__ 1024
# 0 "<built-in>"
#define __DBL_MAX_10_EXP__ 308
# 0 "<built-in>"
#define __DBL_DECIMAL_DIG__ 17
# 0 "<built-in>"
#define __DBL_MAX__ ((double)1.79769313486231570814527423731704357e+308L)
# 0 "<built-in>"
#define __DBL_NORM_MAX__ ((double)1.79769313486231570814527423731704357e+308L)
# 0 "<built-in>"
#define __DBL_MIN__ ((double)2.22507385850720138309023271733240406e-308L)
# 0 "<built-in>"
#define __DBL_EPSILON__ ((double)2.22044604925031308084726333618164062e-16L)
# 0 "<built-in>"
#define __DBL_DENORM_MIN__ ((double)4.94065645841246544176568792868221372e-324L)
# 0 "<built-in>"
#define __DBL_HAS_DENORM__ 1
# 0 "<built-in>"
#define __DBL_HAS_INFINITY__ 1
# 0 "<built-in>"
#define __DBL_HAS_QUIET_NAN__ 1
# 0 "<built-in>"
#define __DBL_IS_IEC_60559__ 2
# 0 "<built-in>"
#define __LDBL_MANT_DIG__ 64
# 0 "<built-in>"
#define __LDBL_DIG__ 18
# 0 "<built-in>"
#define __LDBL_MIN_EXP__ (-16381)
# 0 "<built-in>"
#define __LDBL_MIN_10_EXP__ (-4931)
# 0 "<built-in>"
#define __LDBL_MAX_EXP__ 16384
# 0 "<built-in>"
#define __LDBL_MAX_10_EXP__ 4932
# 0 "<built-in>"
#define __DECIMAL_DIG__ 21
# 0 "<built-in>"
#define __LDBL_DECIMAL_DIG__ 21
# 0 "<built-in>"
#define __LDBL_MAX__ 1.18973149535723176502126385303097021e+4932L
# 0 "<built-in>"
#define __LDBL_NORM_MAX__ 1.18973149535723176502126385303097021e+4932L
# 0 "<built-in>"
#define __LDBL_MIN__ 3.36210314311209350626267781732175260e-4932L
# 0 "<built-in>"
#define __LDBL_EPSILON__ 1.08420217248550443400745280086994171e-19L
# 0 "<built-in>"
#define __LDBL_DENORM_MIN__ 3.64519953188247460252840593361941982e-4951L
# 0 "<built-in>"
#define __LDBL_HAS_DENORM__ 1
# 0 "<built-in>"
#define __LDBL_HAS_INFINITY__ 1
# 0 "<built-in>"
#define __LDBL_HAS_QUIET_NAN__ 1
# 0 "<built-in>"
#define __LDBL_IS_IEC_60559__ 2
# 0 "<built-in>"
#define __FLT32_MANT_DIG__ 24
# 0 "<built-in>"
#define __FLT32_DIG__ 6
# 0 "<built-in>"
#define __FLT32_MIN_EXP__ (-125)
# 0 "<built-in>"
#define __FLT32_MIN_10_EXP__ (-37)
# 0 "<built-in>"
#define __FLT32_MAX_EXP__ 128
# 0 "<built-in>"
#define __FLT32_MAX_10_EXP__ 38
# 0 "<built-in>"
#define __FLT32_DECIMAL_DIG__ 9
# 0 "<built-in>"
#define __FLT32_MAX__ 3.40282346638528859811704183484516925e+38F32
# 0 "<built-in>"
#define __FLT32_NORM_MAX__ 3.40282346638528859811704183484516925e+38F32
# 0 "<built-in>"
#define __FLT32_MIN__ 1.17549435082228750796873653722224568e-38F32
# 0 "<built-in>"
#define __FLT32_EPSILON__ 1.19209289550781250000000000000000000e-7F32
# 0 "<built-in>"
#define __FLT32_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F32
# 0 "<built-in>"
#define __FLT32_HAS_DENORM__ 1
# 0 "<built-in>"
#define __FLT32_HAS_INFINITY__ 1
# 0 "<built-in>"
#define __FLT32_HAS_QUIET_NAN__ 1
# 0 "<built-in>"
#define __FLT32_IS_IEC_60559__ 2
# 0 "<built-in>"
#define __FLT64_MANT_DIG__ 53
# 0 "<built-in>"
#define __FLT64_DIG__ 15
# 0 "<built-in>"
#define __FLT64_MIN_EXP__ (-1021)
# 0 "<built-in>"
#define __FLT64_MIN_10_EXP__ (-307)
# 0 "<built-in>"
#define __FLT64_MAX_EXP__ 1024
# 0 "<built-in>"
#define __FLT64_MAX_10_EXP__ 308
# 0 "<built-in>"
#define __FLT64_DECIMAL_DIG__ 17
# 0 "<built-in>"
#define __FLT64_MAX__ 1.79769313486231570814527423731704357e+308F64
# 0 "<built-in>"
#define __FLT64_NORM_MAX__ 1.79769313486231570814527423731704357e+308F64
# 0 "<built-in>"
#define __FLT64_MIN__ 2.22507385850720138309023271733240406e-308F64
# 0 "<built-in>"
#define __FLT64_EPSILON__ 2.22044604925031308084726333618164062e-16F64
# 0 "<built-in>"
#define __FLT64_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F64
# 0 "<built-in>"
#define __FLT64_HAS_DENORM__ 1
# 0 "<built-in>"
#define __FLT64_HAS_INFINITY__ 1
# 0 "<built-in>"
#define __FLT64_HAS_QUIET_NAN__ 1
# 0 "<built-in>"
#define __FLT64_IS_IEC_60559__ 2
# 0 "<built-in>"
#define __FLT128_MANT_DIG__ 113
# 0 "<built-in>"
#define __FLT128_DIG__ 33
# 0 "<built-in>"
#define __FLT128_MIN_EXP__ (-16381)
# 0 "<built-in>"
#define __FLT128_MIN_10_EXP__ (-4931)
# 0 "<built-in>"
#define __FLT128_MAX_EXP__ 16384
# 0 "<built-in>"
#define __FLT128_MAX_10_EXP__ 4932
# 0 "<built-in>"
#define __FLT128_DECIMAL_DIG__ 36
# 0 "<built-in>"
#define __FLT128_MAX__ 1.18973149535723176508575932662800702e+4932F128
# 0 "<built-in>"
#define __FLT128_NORM_MAX__ 1.18973149535723176508575932662800702e+4932F128
# 0 "<built-in>"
#define __FLT128_MIN__ 3.36210314311209350626267781732175260e-4932F128
# 0 "<built-in>"
#define __FLT128_EPSILON__ 1.92592994438723585305597794258492732e-34F128
# 0 "<built-in>"
#define __FLT128_DENORM_MIN__ 6.47517511943802511092443895822764655e-4966F128
# 0 "<built-in>"
#define __FLT128_HAS_DENORM__ 1
# 0 "<built-in>"
#define __FLT128_HAS_INFINITY__ 1
# 0 "<built-in>"
#define __FLT128_HAS_QUIET_NAN__ 1
# 0 "<built-in>"
#define __FLT128_IS_IEC_60559__ 2
# 0 "<built-in>"
#define __FLT32X_MANT_DIG__ 53
# 0 "<built-in>"
#define __FLT32X_DIG__ 15
# 0 "<built-in>"
#define __FLT32X_MIN_EXP__ (-1021)
# 0 "<built-in>"
#define __FLT32X_MIN_10_EXP__ (-307)
# 0 "<built-in>"
#define __FLT32X_MAX_EXP__ 1024
# 0 "<built-in>"
#define __FLT32X_MAX_10_EXP__ 308
# 0 "<built-in>"
#define __FLT32X_DECIMAL_DIG__ 17
# 0 "<built-in>"
#define __FLT32X_MAX__ 1.79769313486231570814527423731704357e+308F32x
# 0 "<built-in>"
#define __FLT32X_NORM_MAX__ 1.79769313486231570814527423731704357e+308F32x
# 0 "<built-in>"
#define __FLT32X_MIN__ 2.22507385850720138309023271733240406e-308F32x
# 0 "<built-in>"
#define __FLT32X_EPSILON__ 2.22044604925031308084726333618164062e-16F32x
# 0 "<built-in>"
#define __FLT32X_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F32x
# 0 "<built-in>"
#define __FLT32X_HAS_DENORM__ 1
# 0 "<built-in>"
#define __FLT32X_HAS_INFINITY__ 1
# 0 "<built-in>"
#define __FLT32X_HAS_QUIET_NAN__ 1
# 0 "<built-in>"
#define __FLT32X_IS_IEC_60559__ 2
# 0 "<built-in>"
#define __FLT64X_MANT_DIG__ 64
# 0 "<built-in>"
#define __FLT64X_DIG__ 18
# 0 "<built-in>"
#define __FLT64X_MIN_EXP__ (-16381)
# 0 "<built-in>"
#define __FLT64X_MIN_10_EXP__ (-4931)
# 0 "<built-in>"
#define __FLT64X_MAX_EXP__ 16384
# 0 "<built-in>"
#define __FLT64X_MAX_10_EXP__ 4932
# 0 "<built-in>"
#define __FLT64X_DECIMAL_DIG__ 21
# 0 "<built-in>"
#define __FLT64X_MAX__ 1.18973149535723176502126385303097021e+4932F64x
# 0 "<built-in>"
#define __FLT64X_NORM_MAX__ 1.18973149535723176502126385303097021e+4932F64x
# 0 "<built-in>"
#define __FLT64X_MIN__ 3.36210314311209350626267781732175260e-4932F64x
# 0 "<built-in>"
#define __FLT64X_EPSILON__ 1.08420217248550443400745280086994171e-19F64x
# 0 "<built-in>"
#define __FLT64X_DENORM_MIN__ 3.64519953188247460252840593361941982e-4951F64x
# 0 "<built-in>"
#define __FLT64X_HAS_DENORM__ 1
# 0 "<built-in>"
#define __FLT64X_HAS_INFINITY__ 1
# 0 "<built-in>"
#define __FLT64X_HAS_QUIET_NAN__ 1
# 0 "<built-in>"
#define __FLT64X_IS_IEC_60559__ 2
# 0 "<built-in>"
#define __REGISTER_PREFIX__ 
# 0 "<built-in>"
#define __USER_LABEL_PREFIX__ _
# 0 "<built-in>"
#define __GNUC_STDC_INLINE__ 1
# 0 "<built-in>"
#define __NO_INLINE__ 1
# 0 "<built-in>"
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1
# 0 "<built-in>"
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1
# 0 "<built-in>"
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1
# 0 "<built-in>"
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 1
# 0 "<built-in>"
#define __GCC_ATOMIC_BOOL_LOCK_FREE 2
# 0 "<built-in>"
#define __GCC_ATOMIC_CHAR_LOCK_FREE 2
# 0 "<built-in>"
#define __GCC_ATOMIC_CHAR16_T_LOCK_FREE 2
# 0 "<built-in>"
#define __GCC_ATOMIC_CHAR32_T_LOCK_FREE 2
# 0 "<built-in>"
#define __GCC_ATOMIC_WCHAR_T_LOCK_FREE 2
# 0 "<built-in>"
#define __GCC_ATOMIC_SHORT_LOCK_FREE 2
# 0 "<built-in>"
#define __GCC_ATOMIC_INT_LOCK_FREE 2
# 0 "<built-in>"
#define __GCC_ATOMIC_LONG_LOCK_FREE 2
# 0 "<built-in>"
#define __GCC_ATOMIC_LLONG_LOCK_FREE 2
# 0 "<built-in>"
#define __GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1
# 0 "<built-in>"
#define __GCC_ATOMIC_POINTER_LOCK_FREE 2
# 0 "<built-in>"
#define __HAVE_SPECULATION_SAFE_VALUE 1
# 0 "<built-in>"
#define __PRAGMA_REDEFINE_EXTNAME 1
# 0 "<built-in>"
#define __SIZEOF_INT128__ 16
# 0 "<built-in>"
#define __SIZEOF_WCHAR_T__ 4
# 0 "<built-in>"
#define __SIZEOF_WINT_T__ 4
# 0 "<built-in>"
#define __SIZEOF_PTRDIFF_T__ 8
# 0 "<built-in>"
#define __amd64 1
# 0 "<built-in>"
#define __amd64__ 1
# 0 "<built-in>"
#define __x86_64 1
# 0 "<built-in>"
#define __x86_64__ 1
# 0 "<built-in>"
#define __SIZEOF_FLOAT80__ 16
# 0 "<built-in>"
#define __SIZEOF_FLOAT128__ 16
# 0 "<built-in>"
#define __ATOMIC_HLE_ACQUIRE 65536
# 0 "<built-in>"
#define __ATOMIC_HLE_RELEASE 131072
# 0 "<built-in>"
#define __GCC_ASM_FLAG_OUTPUTS__ 1
# 0 "<built-in>"
#define __k8 1
# 0 "<built-in>"
#define __k8__ 1
# 0 "<built-in>"
#define __tune_core2__ 1
# 0 "<built-in>"
#define __code_model_small__ 1
# 0 "<built-in>"
#define __MMX__ 1
# 0 "<built-in>"
#define __SSE__ 1
# 0 "<built-in>"
#define __SSE2__ 1
# 0 "<built-in>"
#define __SSE3__ 1
# 0 "<built-in>"
#define __FXSR__ 1
# 0 "<built-in>"
#define __SSE_MATH__ 1
# 0 "<built-in>"
#define __SSE2_MATH__ 1
# 0 "<built-in>"
#define __MMX_WITH_SSE__ 1
# 0 "<built-in>"
#define __SEG_FS 1
# 0 "<built-in>"
#define __SEG_GS 1
# 0 "<built-in>"
#define __LITTLE_ENDIAN__ 1
# 0 "<built-in>"
#define __MACH__ 1
# 0 "<built-in>"
#define __APPLE__ 1
# 0 "<built-in>"
#define __APPLE_CC__ 1
# 0 "<built-in>"
#define __CONSTANT_CFSTRINGS__ 1
# 0 "<built-in>"
#define __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ 110500
# 0 "<built-in>"
#define __strong 
# 0 "<built-in>"
#define __weak 
# 0 "<command-line>"
#define __DYNAMIC__ 1
# 1 "project/radare2/libr/asm/arch/dalvik/opcode.h"



#define DALVIK_OPCODE_H 

enum fmt_inst {
 fmt00 = 0,
 fmtop,
 fmtopvAvB,
 fmtopvAcB,
 fmtopvAA,
 fmtoppAA,
 fmtopAAtBBBB,
 fmtoppAAAA,
 fmtopvAAvBBBB,
 fmtopvAApBBBB,
 fmtopvAAcBBBB,
 fmtopvAAcBBBB0000,
 fmtopvAAtBBBB,
 fmtopvAAvBBvCC,
 fmtopvAAvBBcCC,
 fmtopvAvBpCCCC,
 fmtopvAvBcCCCC,
 fmtopvAvBtCCCC,
 fmtoptopvAvBoCCCC,
 fmtopvAAAAvBBBB,
 fmtoppAAAAAAAA,
 fmtopvAApBBBBBBBB,
 fmtopvAAcBBBBBBBB,
 fmtopvAAtBBBBBBBB,
 fmtopvXtBBBB,
 fmtoptinvokeVS,
 fmtoptinvokeI,
 fmtopvCCCCmBBBB,
 fmtoptinvokeVSR,
 fmtoptinvokeIR,
 fmtoptinlineI,
 fmtoptinlineIR,
 fmtopvAAcBBBBBBBBBBBBBBBB,
 fmtop45CC,
 fmtop4RCC,
 fmtoptinvokcustom,
};

struct dalvik_opcodes_t {
 char *name;
 int len;
 int fmt;
};

static const struct dalvik_opcodes_t dalvik_opcodes[256] = {
 {"nop", 2, fmtop},
 {"move", 2, fmtopvAvB},
 {"move/from16", 4, fmtopvAAvBBBB},
 {"move/16", 6, fmtopvAAAAvBBBB},
 {"move-wide", 2, fmtopvAvB},
 {"move-wide/from16", 4, fmtopvAAvBBBB},
 {"move-wide/16", 6, fmtopvAAAAvBBBB},
 {"move-object", 2, fmtopvAvB},
 {"move-object/from16", 4, fmtopvAAvBBBB},
 {"move-object/16", 6, fmtopvAAAAvBBBB},
 {"move-result", 2, fmtopvAA},
 {"move-result-wide", 2, fmtopvAA},
 {"move-result-object", 2, fmtopvAA},
 {"move-exception", 2, fmtopvAA},
 {"return-void", 2, fmtop},
 {"return", 2, fmtopvAA},
 {"return-wide", 2, fmtopvAA},
 {"return-object", 2, fmtopvAA},
 {"const/4", 2, fmtopvAcB},
 {"const/16", 4, fmtopvAAcBBBB},
 {"const", 6, fmtopvAAcBBBBBBBB},
 {"const/high16", 4, fmtopvAAcBBBB0000},
 {"const-wide/16", 4, fmtopvAAcBBBB},
 {"const-wide/32", 6, fmtopvAAcBBBBBBBB},
 {"const-wide", 10, fmtopvAAcBBBBBBBBBBBBBBBB},
 {"const-wide/high16", 4, fmtopvAAcBBBB0000},
 {"const-string", 4, fmtopvAAtBBBB},
 {"const-string/jumbo", 6, fmtopvAAtBBBBBBBB},
 {"const-class", 4, fmtopvAAtBBBB},
 {"monitor-enter", 2, fmtopvAA},
 {"monitor-exit", 2, fmtopvAA},
 {"check-cast", 4, fmtopvAAtBBBB},
 {"instance-of", 4, fmtopvAvBtCCCC},
 {"array-length", 2, fmtopvAvB},
 {"new-instance", 4, fmtopvAAtBBBB},
 {"new-array", 4, fmtopvAvBtCCCC},
 {"filled-new-array", 6, fmtopvXtBBBB},
 {"filled-new-array/range", 6, fmtopvCCCCmBBBB},
 {"fill-array-data", 6, fmtopvAApBBBBBBBB},
 {"throw", 2, fmtopvAA},
 {"goto", 2, fmtoppAA},
 {"goto/16", 4, fmtoppAAAA},
 {"goto/32", 6, fmtoppAAAAAAAA},
 {"packed-switch", 6, fmtopvAApBBBBBBBB},
 {"sparse-switch", 6, fmtopvAApBBBBBBBB},
 {"cmpl-float", 4, fmtopvAAvBBvCC},
 {"cmpg-float", 4, fmtopvAAvBBvCC},
 {"cmpl-double", 4, fmtopvAAvBBvCC},
 {"cmpg-double", 4, fmtopvAAvBBvCC},
 {"cmp-long", 4, fmtopvAAvBBvCC},
 {"if-eq", 4, fmtopvAvBpCCCC},
 {"if-ne", 4, fmtopvAvBpCCCC},
 {"if-lt", 4, fmtopvAvBpCCCC},
 {"if-ge", 4, fmtopvAvBpCCCC},
 {"if-gt", 4, fmtopvAvBpCCCC},
 {"if-le", 4, fmtopvAvBpCCCC},
 {"if-eqz", 4, fmtopvAApBBBB},
 {"if-nez", 4, fmtopvAApBBBB},
 {"if-ltz", 4, fmtopvAApBBBB},
 {"if-gez", 4, fmtopvAApBBBB},
 {"if-gtz", 4, fmtopvAApBBBB},
 {"if-lez", 4, fmtopvAApBBBB},
 {"UNUSED", 2, fmt00},
 {"UNUSED", 2, fmt00},
 {"UNUSED", 2, fmt00},
 {"UNUSED", 2, fmt00},
 {"UNUSED", 2, fmt00},
 {"UNUSED", 2, fmt00},
 {"aget", 4, fmtopvAAvBBvCC},
 {"aget-wide", 4, fmtopvAAvBBvCC},
 {"aget-object", 4, fmtopvAAvBBvCC},
 {"aget-boolean", 4, fmtopvAAvBBvCC},
 {"aget-byte", 4, fmtopvAAvBBvCC},
 {"aget-char", 4, fmtopvAAvBBvCC},
 {"aget-short", 4, fmtopvAAvBBvCC},
 {"aput", 4, fmtopvAAvBBvCC},
 {"aput-wide", 4, fmtopvAAvBBvCC},
 {"aput-object", 4, fmtopvAAvBBvCC},
 {"aput-boolean", 4, fmtopvAAvBBvCC},
 {"aput-byte", 4, fmtopvAAvBBvCC},
 {"aput-char", 4, fmtopvAAvBBvCC},
 {"aput-short", 4, fmtopvAAvBBvCC},
 {"iget", 4, fmtopvAvBtCCCC},
 {"iget-wide", 4, fmtopvAvBtCCCC},
 {"iget-object", 4, fmtopvAvBtCCCC},
 {"iget-boolean", 4, fmtopvAvBtCCCC},
 {"iget-byte", 4, fmtopvAvBtCCCC},
 {"iget-char", 4, fmtopvAvBtCCCC},
 {"iget-short", 4, fmtopvAvBtCCCC},
 {"iput", 4, fmtopvAvBtCCCC},
 {"iput-wide", 4, fmtopvAvBtCCCC},
 {"iput-object", 4, fmtopvAvBtCCCC},
 {"iput-boolean", 4, fmtopvAvBtCCCC},
 {"iput-byte", 4, fmtopvAvBtCCCC},
 {"iput-char", 4, fmtopvAvBtCCCC},
 {"iput-short", 4, fmtopvAvBtCCCC},
 {"sget", 4, fmtopvAAtBBBB},
 {"sget-wide", 4, fmtopvAAtBBBB},
 {"sget-object", 4, fmtopvAAtBBBB},
 {"sget-boolean", 4, fmtopvAAtBBBB},
 {"sget-byte", 4, fmtopvAAtBBBB},
 {"sget-char", 4, fmtopvAAtBBBB},
 {"sget-short", 4, fmtopvAAtBBBB},
 {"sput", 4, fmtopvAAtBBBB},
 {"sput-wide", 4, fmtopvAAtBBBB},
 {"sput-object", 4, fmtopvAAtBBBB},
 {"sput-boolean", 4, fmtopvAAtBBBB},
 {"sput-byte", 4, fmtopvAAtBBBB},
 {"sput-char", 4, fmtopvAAtBBBB},
 {"sput-short", 4, fmtopvAAtBBBB},
 {"invoke-virtual", 6, fmtopvXtBBBB},
 {"invoke-super", 6, fmtopvXtBBBB},
 {"invoke-direct", 6, fmtopvXtBBBB},
 {"invoke-static", 6, fmtopvXtBBBB},
 {"invoke-interface", 6, fmtopvXtBBBB},
 {"UNUSED", 2, fmt00},
 {"invoke-virtual/range", 6, fmtopvCCCCmBBBB},
 {"invoke-super/range", 6, fmtopvCCCCmBBBB},
 {"invoke-direct/range", 6, fmtopvCCCCmBBBB},
 {"invoke-static/range", 6, fmtopvCCCCmBBBB},
 {"invoke-interface/range", 6, fmtopvCCCCmBBBB},
 {"UNUSED", 2, fmt00},
 {"UNUSED", 2, fmt00},
 {"neg-int", 2, fmtopvAvB},
 {"not-int", 2, fmtopvAvB},
 {"neg-long", 2, fmtopvAvB},
 {"not-long", 2, fmtopvAvB},
 {"neg-float", 2, fmtopvAvB},
 {"neg-double", 2, fmtopvAvB},
 {"int-to-long", 2, fmtopvAvB},
 {"int-to-float", 2, fmtopvAvB},
 {"int-to-double", 2, fmtopvAvB},
 {"long-to-int", 2, fmtopvAvB},
 {"long-to-float", 2, fmtopvAvB},
 {"long-to-double", 2, fmtopvAvB},
 {"float-to-int", 2, fmtopvAvB},
 {"float-to-long", 2, fmtopvAvB},
 {"float-to-double", 2, fmtopvAvB},
 {"double-to-int", 2, fmtopvAvB},
 {"double-to-long", 2, fmtopvAvB},
 {"double-to-float", 2, fmtopvAvB},
 {"int-to-byte", 2, fmtopvAvB},
 {"int-to-char", 2, fmtopvAvB},
 {"int-to-short", 2, fmtopvAvB},
 {"add-int", 4, fmtopvAAvBBvCC},
 {"sub-int", 4, fmtopvAAvBBvCC},
 {"mul-int", 4, fmtopvAAvBBvCC},
 {"div-int", 4, fmtopvAAvBBvCC},
 {"rem-int", 4, fmtopvAAvBBvCC},
 {"and-int", 4, fmtopvAAvBBvCC},
 {"or-int", 4, fmtopvAAvBBvCC},
 {"xor-int", 4, fmtopvAAvBBvCC},
 {"shl-int", 4, fmtopvAAvBBvCC},
 {"shr-int", 4, fmtopvAAvBBvCC},
 {"ushr-int", 4, fmtopvAAvBBvCC},
 {"add-long", 4, fmtopvAAvBBvCC},
 {"sub-long", 4, fmtopvAAvBBvCC},
 {"mul-long", 4, fmtopvAAvBBvCC},
 {"div-long", 4, fmtopvAAvBBvCC},
 {"rem-long", 4, fmtopvAAvBBvCC},
 {"and-long", 4, fmtopvAAvBBvCC},
 {"or-long", 4, fmtopvAAvBBvCC},
 {"xor-long", 4, fmtopvAAvBBvCC},
 {"shl-long", 4, fmtopvAAvBBvCC},
 {"shr-long", 4, fmtopvAAvBBvCC},
 {"ushr-long", 4, fmtopvAAvBBvCC},
 {"add-float", 4, fmtopvAAvBBvCC},
 {"sub-float", 4, fmtopvAAvBBvCC},
 {"mul-float", 4, fmtopvAAvBBvCC},
 {"div-float", 4, fmtopvAAvBBvCC},
 {"rem-float", 4, fmtopvAAvBBvCC},
 {"add-double", 4, fmtopvAAvBBvCC},
 {"sub-double", 4, fmtopvAAvBBvCC},
 {"mul-double", 4, fmtopvAAvBBvCC},
 {"div-double", 4, fmtopvAAvBBvCC},
 {"rem-double", 4, fmtopvAAvBBvCC},
 {"add-int/2addr", 2, fmtopvAvB},
 {"sub-int/2addr", 2, fmtopvAvB},
 {"mul-int/2addr", 2, fmtopvAvB},
 {"div-int/2addr", 2, fmtopvAvB},
 {"rem-int/2addr", 2, fmtopvAvB},
 {"and-int/2addr", 2, fmtopvAvB},
 {"or-int/2addr", 2, fmtopvAvB},
 {"xor-int/2addr", 2, fmtopvAvB},
 {"shl-int/2addr", 2, fmtopvAvB},
 {"shr-int/2addr", 2, fmtopvAvB},
 {"ushr-int/2addr", 2, fmtopvAvB},
 {"add-long/2addr", 2, fmtopvAvB},
 {"sub-long/2addr", 2, fmtopvAvB},
 {"mul-long/2addr", 2, fmtopvAvB},
 {"div-long/2addr", 2, fmtopvAvB},
 {"rem-long/2addr", 2, fmtopvAvB},
 {"and-long/2addr", 2, fmtopvAvB},
 {"or-long/2addr", 2, fmtopvAvB},
 {"xor-long/2addr", 2, fmtopvAvB},
 {"shl-long/2addr", 2, fmtopvAvB},
 {"shr-long/2addr", 2, fmtopvAvB},
 {"ushr-long/2addr", 2, fmtopvAvB},
 {"add-float/2addr", 2, fmtopvAvB},
 {"sub-float/2addr", 2, fmtopvAvB},
 {"mul-float/2addr", 2, fmtopvAvB},
 {"div-float/2addr", 2, fmtopvAvB},
 {"rem-float/2addr", 2, fmtopvAvB},
 {"add-double/2addr", 2, fmtopvAvB},
 {"sub-double/2addr", 2, fmtopvAvB},
 {"mul-double/2addr", 2, fmtopvAvB},
 {"div-double/2addr", 2, fmtopvAvB},
 {"rem-double/2addr", 2, fmtopvAvB},
 {"add-int/lit16", 4, fmtopvAvBcCCCC},
 {"rsub-int", 4, fmtopvAvBcCCCC},
 {"mul-int/lit16", 4, fmtopvAvBcCCCC},
 {"div-int/lit16", 4, fmtopvAvBcCCCC},
 {"rem-int/lit16", 4, fmtopvAvBcCCCC},
 {"and-int/lit16", 4, fmtopvAvBcCCCC},
 {"or-int/lit16", 4, fmtopvAvBcCCCC},
 {"xor-int/lit16", 4, fmtopvAvBcCCCC},
 {"add-int/lit8", 4, fmtopvAAvBBcCC},
 {"rsub-int/lit8", 4, fmtopvAAvBBcCC},
 {"mul-int/lit8", 4, fmtopvAAvBBcCC},
 {"div-int/lit8", 4, fmtopvAAvBBcCC},
 {"rem-int/lit8", 4, fmtopvAAvBBcCC},
 {"and-int/lit8", 4, fmtopvAAvBBcCC},
 {"or-int/lit8", 4, fmtopvAAvBBcCC},
 {"xor-int/lit8", 4, fmtopvAAvBBcCC},
 {"shl-int/lit8", 4, fmtopvAAvBBcCC},
 {"shr-int/lit8", 4, fmtopvAAvBBcCC},
 {"ushr-int/lit8", 4, fmtopvAAvBBcCC},
 {"+iget-volatile", 4, fmtopvAvBtCCCC},
 {"+iput-volatile", 4, fmtopvAvBtCCCC},
 {"+sget-volatile", 4, fmtopvAvBtCCCC},
 {"+sput-volatile", 4, fmtopvAvBtCCCC},
 {"+iget-object-volatile", 4, fmtopvAvBtCCCC},
 {"+iget-wide-volatile", 4, fmtopvAvBtCCCC},
 {"+iput-wide-volatile", 4, fmtopvAvBtCCCC},
 {"+sget-wide-volatile", 4, fmtopvAvBtCCCC},
 {"+sput-wide-volatile", 4, fmtopvAvBtCCCC},
 {"^breakpoint", 4, fmtopvAvBtCCCC},
 {"^throw-verification-error", 4, fmtopAAtBBBB},
 {"+execute-inline", 6, fmtoptinlineI},
 {"+execute-inline/range", 6, fmtoptinlineIR},

 {"+invoke-object-init-range", 6, fmtopvXtBBBB},
 {"return-void-barrier", 2, fmtop},
 {"+iget-quick", 4, fmtoptopvAvBoCCCC},
 {"+iget-wide-quick", 4, fmtoptopvAvBoCCCC},
 {"+iget-object-quick", 4, fmtoptopvAvBoCCCC},
 {"+iput-quick", 4, fmtoptopvAvBoCCCC},
 {"+iput-wide-quick", 4, fmtoptopvAvBoCCCC},
 {"+iput-object-quick", 4, fmtoptopvAvBoCCCC},
 {"+invoke-virtual-quick", 6, fmtoptinvokeVS},
 {"+invoke-virtual-quick/range", 6, fmtoptinvokeVSR},
 {"invoke-polymorphic", 8, fmtop45CC},
 {"invoke-polymorphic/range", 8, fmtop4RCC},
 {"invoke-custom", 6, fmtopvXtBBBB},
 {"invoke-custom/range", 6, fmtopvCCCCmBBBB},
 {"+sput-object-volatile", 4, fmtopvAAtBBBB},
 {"invalid", 2, fmtop}
};
